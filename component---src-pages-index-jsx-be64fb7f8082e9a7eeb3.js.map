{"version":3,"sources":["webpack:///./src/components/organisms/PostList.jsx","webpack:///./src/components/organisms/Jumbotron.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/organisms/AppBar.jsx","webpack:///./src/components/templates/Layout.jsx"],"names":["PostList","render","posts","this","props","react_default","a","createElement","react","map","_ref","node","title","get","fields","slug","key","gatsby_browser_entry","style","boxShadow","to","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","Component","Jumbotron","classes","Paper_default","className","paper","Typography_default","variant","component","withStyles","theme","padding","spacing","unit","textAlign","color","palette","text","secondary","Index","siteTitle","siteDescription","Layout","location","Helmet_default","htmlAttributes","lang","meta","name","content","organisms_Jumbotron","organisms_PostList","React","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ButtonAppBar","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","grow","textDecoration","Button_default","href","Icon_default","flexGrow","marginLeft","marginRight","createMuiTheme","typography","useNextVariants","primary","main","componentDidMount","loadCSS","document","querySelector","_this$props","styles","organisms_AppBar"],"mappings":"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","file":"component---src-pages-index-jsx-be64fb7f8082e9a7eeb3.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport get from 'lodash/get'\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { posts } = this.props\r\n    return (\r\n      <Fragment>\r\n        {posts.map(({ node }) => {\r\n          const title = get(node, 'frontmatter.title') || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3>\r\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n            </div>\r\n          )\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostList\r\n","import React, { Component } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass Jumbotron extends Component {\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          This is a sheet of paper.\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your\r\n          application.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Jumbotron)\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from '../components/templates/Layout'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport PostList from '../components/organisms/PostList'\r\nimport Jumbotron from '../components/organisms/Jumbotron'\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\r\n    const siteDescription = get(\r\n      this,\r\n      'props.data.site.siteMetadata.description'\r\n    )\r\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Helmet\r\n          htmlAttributes={{ lang: 'en' }}\r\n          meta={[{ name: 'description', content: siteDescription }]}\r\n          title={siteTitle}\r\n        />\r\n        <Jumbotron />\r\n        <PostList posts={posts} />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Icon from '@material-ui/core/Icon'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n}\r\n\r\nclass ButtonAppBar extends React.Component {\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              <Link\r\n                to={'/'}\r\n                style={{ color: 'inherit', textDecoration: 'none' }}\r\n              >\r\n                pjb0811.github.io\r\n              </Link>\r\n            </Typography>\r\n            <Button color=\"inherit\">\r\n              <a href=\"https://github.com/pjb0811\" style={{ color: 'inherit' }}>\r\n                <Icon className={'fab fa-github'} />\r\n              </a>\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ButtonAppBar)\r\n","import React from 'react'\r\nimport AppBar from '../organisms/AppBar'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport 'typeface-roboto'\r\nimport './layout.css'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#448AFF',\r\n    },\r\n  },\r\n})\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n})\r\n\r\nclass Layout extends React.Component {\r\n  componentDidMount() {\r\n    loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\r\n      document.querySelector('#___gatsby')\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { children, classes } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <AppBar />\r\n          {children}\r\n        </div>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Layout)\r\n"],"sourceRoot":""}