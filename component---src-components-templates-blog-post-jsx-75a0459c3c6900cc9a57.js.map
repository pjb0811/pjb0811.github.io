{"version":3,"sources":["webpack:///./src/components/templates/BlogPost.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/organisms/AppBar.jsx","webpack:///./src/components/templates/Layout.jsx"],"names":["BlogPost","render","post","this","props","data","markdownRemark","siteTitle","get","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_Layout__WEBPACK_IMPORTED_MODULE_5__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","lang","meta","name","content","title","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ButtonAppBar","componentDidMount","loadCSS","document","querySelector","classes","react_default","className","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","gatsby_browser_entry","textDecoration","Button_default","href","Icon_default","withStyles","flexGrow","marginLeft","marginRight","theme","createMuiTheme","typography","useNextVariants","Layout","styles","organisms_AppBar"],"mappings":"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","file":"component---src-components-templates-blog-post-jsx-75a0459c3c6900cc9a57.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Layout from './Layout'\n\nclass BlogPost extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Icon from '@material-ui/core/Icon'\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n}\n\nclass ButtonAppBar extends React.Component {\n  componentDidMount() {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#___gatsby')\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <Link\n                to={'/'}\n                style={{ color: 'inherit', textDecoration: 'none' }}\n              >\n                pjb0811.github.io\n              </Link>\n            </Typography>\n            <Button color=\"inherit\">\n              <a href=\"https://github.com/pjb0811\" style={{ color: 'inherit' }}>\n                <Icon className={'fab fa-github'} />\n              </a>\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ButtonAppBar)\n","import React from 'react'\nimport AppBar from '../organisms/AppBar'\nimport { Link } from 'gatsby'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport Helmet from 'react-helmet'\nimport Grid from '@material-ui/core/Grid'\nimport 'typeface-roboto'\nimport './layout.css'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar />\n        {children}\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}